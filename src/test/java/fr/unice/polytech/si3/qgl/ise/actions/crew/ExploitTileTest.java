package fr.unice.polytech.si3.qgl.ise.actions.crew;

import fr.unice.polytech.si3.qgl.ise.CraftedContract;
import fr.unice.polytech.si3.qgl.ise.RawContract;
import fr.unice.polytech.si3.qgl.ise.entities.Crew;
import fr.unice.polytech.si3.qgl.ise.enums.RawResource;
import fr.unice.polytech.si3.qgl.ise.map.Coordinates;
import fr.unice.polytech.si3.qgl.ise.map.IslandMap;
import org.junit.Test;
import org.junit.Before;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;


public class ExploitTileTest {

    private Crew crew;
    private ExploitTile exploitTile;

    @Before
    public void setup() {
        IslandMap map = new IslandMap();
        map.addCreek(new Coordinates(0, 0), "idDepart");

        List<RawContract> rawContracts = new ArrayList<>();
        List<CraftedContract> craftedContracts = new ArrayList<>();

        rawContracts.add(new RawContract(RawResource.WOOD, 500));
        rawContracts.add(new RawContract(RawResource.QUARTZ, 20));
        crew = new Crew(map, rawContracts, craftedContracts);
        crew.setIdCreek("idDepart");
        crew.setCoordinates(new Coordinates(0, 0));
        exploitTile = new ExploitTile(crew, RawResource.WOOD);
    }

    @Test
    public void startByExplore() {
        String res = exploitTile.apply();
        assertEquals("{\"action\":\"explore\"}", res);
    }

    @Test
    public void exploitOneResources() {
        exploitTile.apply();
        exploitTile.acknowledgeResults("{\"cost\":5,\"extras\":{\"resources\":[{\"amount\":\"HIGH\",\"resource\":\"WOOD\",\"cond\":\"FAIR\" }],\"pois\": [{\"kind\":\"Creek\",\"id\":\"idcreek\"}]},\"status\":\"OK\"}\"");
        String res = exploitTile.apply();
        assertEquals("{\"action\":\"exploit\",\"parameters\":{\"resource\":\"WOOD\"}}", res);
    }

    @Test
    public void exploitBothResources() {
        exploitTile.apply();
        exploitTile.acknowledgeResults("{\"cost\":5,\"extras\":{\"resources\":[{\"amount\":\"HIGH\",\"resource\":\"WOOD\",\"cond\":\"FAIR\" },{\"amount\":\"HIGH\",\"resource\":\"QUARTZ\",\"cond\":\"FAIR\" }],\"pois\": [{\"kind\":\"Creek\",\"id\":\"idcreek\"}]},\"status\":\"OK\"}\"");
        String res = exploitTile.apply();
        assertEquals("{\"action\":\"exploit\",\"parameters\":{\"resource\":\"WOOD\"}}", res);
        res = exploitTile.apply();
        assertEquals("{\"action\":\"exploit\",\"parameters\":{\"resource\":\"QUARTZ\"}}", res);
        res = exploitTile.apply();
        assertEquals("", res);
        assertTrue(exploitTile.isFinished());
    }

    @Test
    public void doesntExploitUselessResource() {
        exploitTile.apply();
        exploitTile.acknowledgeResults("{\"cost\":5,\"extras\":{\"resources\":[{\"amount\":\"HIGH\",\"resource\":\"WOOD\",\"cond\":\"FAIR\" },{\"amount\":\"HIGH\",\"resource\":\"FUR\",\"cond\":\"FAIR\" }],\"pois\": [{\"kind\":\"Creek\",\"id\":\"idcreek\"}]},\"status\":\"OK\"}\"");
        String res = exploitTile.apply();
        assertEquals("{\"action\":\"exploit\",\"parameters\":{\"resource\":\"WOOD\"}}", res);
        res = exploitTile.apply();
        assertEquals("", res);
        assertTrue(exploitTile.isFinished());
    }

    @Test
    public void exploitWhenNoFocusResource() {
        exploitTile.apply();
        exploitTile.acknowledgeResults("{\"cost\":5,\"extras\":{\"resources\":[{\"amount\":\"HIGH\",\"resource\":\"QUARTZ\",\"cond\":\"FAIR\" },{\"amount\":\"HIGH\",\"resource\":\"FUR\",\"cond\":\"FAIR\" }],\"pois\": [{\"kind\":\"Creek\",\"id\":\"idcreek\"}]},\"status\":\"OK\"}\"");
        String res = exploitTile.apply();
        assertEquals("{\"action\":\"exploit\",\"parameters\":{\"resource\":\"QUARTZ\"}}", res);
        res = exploitTile.apply();
        assertEquals("", res);
        assertTrue(exploitTile.isFinished());
    }

    @Test
    public void doesntExploit() {
        exploitTile.apply();
        exploitTile.acknowledgeResults("{\"cost\":5,\"extras\":{\"resources\":[{\"amount\":\"HIGH\",\"resource\":\"FUR\",\"cond\":\"FAIR\" }],\"pois\": [{\"kind\":\"Creek\",\"id\":\"idcreek\"}]},\"status\":\"OK\"}\"");
        String res = exploitTile.apply();
        assertEquals("", res);
        assertTrue(exploitTile.isFinished());
    }
}
